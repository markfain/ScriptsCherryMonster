import {Logger} from "../core/Logger";
import {Files} from "../utils/Files";
import {File} from "../utils/File";
import {TextFiles} from "../utils/TextFiles";
import {Prompt} from "../core/Prompt";
{{#if isToolbox}}
import {Command} from "../core/ToolboxCommand";
{{else}}
import {Command} from "../core/Command";
{{/if}}
declare var require: any;
declare var process: any;

export class {{name}} extends {{#if isToolbox}}Toolbox{{/if}}Command {

    constructor() {
        super("{{name}}", "{{description}}", {{tasks}});
    }

    doAddArguments(): void {
        //thiss.addArgument("argName");
    }

    doAddOptions(): void {
        //this.addOption("-0, --option <option>", "A command option");
    }

    action(options: any): void {
        Logger.shockTheUser("my new {{name}}");
        /*
            here is the actual action
            {{#if isToolbox}}
                let myToolboxCommandCommand:IToolboxCommandData = {
                        command:"MyToolboxCommand",
                };

                this.executeToolboxCommand(myToolboxCommand);
            {{/if}}
            prompt the user for something:
            userPrompt
                .input("name", "Command Name:")
                .input("description", "Command Description:")
                .input("tasks", "Number of tasks:")
                .bind(this, this.handleAnswer);

        */
    }

}